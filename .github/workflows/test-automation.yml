name: GitHub Best Practises

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform (apply or destroy)'
        required: true
        default: 'apply'

jobs:
  terraform-deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::273354635930:role/github-oidc
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform test
        run: |
         terraform test
        continue-on-error: true

      - name: Terraform Plan
        run: terraform plan -json > tfplan.json 2>&1

      - name: Debug
        run: cat tfplan.json

      - name: Terraform fmt
        run: terraform fmt -recursive

      - name: Terraform validate
        run: terraform validate

      - name: Lint Terraform Code
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --init
          tflint --config .tflint.hcl
      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkov with soft fail
        run: checkov --directory . --soft-fail

      - name: Generate Terraform Docs (README.md)
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: terraform-docs/gh-actions@v1.3.0
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          git-push: true
          config-file: .terraform-docs.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Post Terraform Docs as PR Comment
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2.9.0
        with:
          working-dir: .
          github_token: ${{ secrets.GITHUB_TOKEN }}
          header: "Terraform Documentation"
          path: ./README.md

      - name: Install Conftest
        run: |
            wget https://github.com/open-policy-agent/conftest/releases/download/v0.51.0/conftest_0.51.0_Linux_x86_64.tar.gz
            tar xzf conftest_0.51.0_Linux_x86_64.tar.gz
            sudo mv conftest /usr/local/bin/
      - name: Run OPA Policy Check
        run: opa run -s first.rego
           # opa run -s first.rego
           # conftest test tfplan.json --policy policies/first.rego

      # - name: Terraform Apply or Destroy
      #   run: |
      #     if [ "${{ github.event.inputs.action }}" = "destroy" ]; then
      #       terraform destroy -auto-approve
      #     else
      #       terraform apply -auto-approve
      #     fi
